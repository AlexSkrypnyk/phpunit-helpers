name: Test PHP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:
    inputs:
      enable_terminal:
        type: boolean
        description: 'Enable terminal session.'
        required: false
        default: false

jobs:
  test-php:
    name: Test PHP ${{ matrix.php-versions }}, PHPUnit ${{ matrix.phpunit-versions }}, Deps ${{ matrix.dependency-preference }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.2', '8.3', '8.4', '8.5']
        phpunit-versions: ['11']
        dependency-preference: ['normal', 'lowest']
        include:
          - php-versions: '8.3'
            phpunit-versions: '12'
            dependency-preference: 'normal'
          - php-versions: '8.3'
            phpunit-versions: '12'
            dependency-preference: 'lowest'
          - php-versions: '8.4'
            phpunit-versions: '12'
            dependency-preference: 'normal'
          - php-versions: '8.4'
            phpunit-versions: '12'
            dependency-preference: 'lowest'
          - php-versions: '8.5'
            phpunit-versions: '12'
            dependency-preference: 'normal'
          - php-versions: '8.5'
            phpunit-versions: '12'
            dependency-preference: 'lowest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          ini-values: pcov.directory=.

      - name: Modify composer.json for PHPUnit version
        run: |
          PHPUNIT_CONSTRAINT="^${{ matrix.phpunit-versions || '10' }}"
          composer require --no-update "phpunit/phpunit:${PHPUNIT_CONSTRAINT}"

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.dependency-preference }}" == "lowest" ]]; then
            composer update --prefer-lowest --prefer-stable ${{ matrix.php-versions == '8.5' && '--ignore-platform-reqs' || '' }}
          else
            composer install ${{ matrix.php-versions == '8.5' && '--ignore-platform-reqs' || '' }}
          fi

      - name: Validate composer.json
        run: |
          composer --verbose validate
          composer normalize --dry-run

      - name: Check coding standards
        if: matrix.php-versions == '8.3' && matrix.dependency-preference == 'normal'
        run: composer lint
        continue-on-error: ${{ vars.CI_LINT_IGNORE_FAILURE == '1' }}

      - name: Run tests with coverage
        if: matrix.phpunit-versions == '12'
        run: composer test-coverage
        continue-on-error: ${{ vars.CI_TEST_IGNORE_FAILURE == '1' }}

      - name: Run tests without coverage
        if: matrix.phpunit-versions != '12'
        run: |
          # Remove Covers annotations from tests to avoid issues with PHPUnit 11
          find ./tests -name '*.php' -exec sed -i '/#\[.*Covers.*\]/d' {} \;
          # And remove coverage section from phpunit.xml to avoid issues with PHPUnit 11
          sed -i 's/requireCoverageMetadata="true"/requireCoverageMetadata="false"/' phpunit.xml
          composer test
        continue-on-error: ${{ vars.CI_TEST_IGNORE_FAILURE == '1' }}

      - name: Upload coverage report as an artifact
        if: matrix.phpunit-versions == '12'
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-code-coverage-report-php-${{ matrix.php-versions }}-phpunit-${{ matrix.phpunit-versions }}-deps-${{ matrix.dependency-preference }}
          path: .logs
          include-hidden-files: true
          if-no-files-found: error

      - name: Upload test results to Codecov
        if: matrix.phpunit-versions == '12' && env.CODECOV_TOKEN != ''
        uses: codecov/test-results-action@v1
        with:
          files: .logs/junit.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage report to Codecov
        if: matrix.phpunit-versions == '12' && env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v5
        with:
          files: .logs/cobertura.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Setup tmate session
        if: ${{ !cancelled() && github.event.inputs.enable_terminal }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30

